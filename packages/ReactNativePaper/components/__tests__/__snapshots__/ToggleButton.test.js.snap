// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders disabled toggle button 1`] = `
<View
  style={
    Object {
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(29, 25, 43, 0.12)",
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 4,
          "borderWidth": 0,
          "elevation": 0,
          "height": 42,
          "margin": 0,
          "overflow": "hidden",
          "width": 42,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
            "selected": true,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(28, 27, 31, 0.38)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders toggle button 1`] = `
<View
  style={
    Object {
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(29, 25, 43, 0.12)",
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 4,
          "borderWidth": 0,
          "elevation": 0,
          "height": 42,
          "margin": 0,
          "overflow": "hidden",
          "width": 42,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": undefined,
            "selected": true,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(73, 69, 79, 1)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders unchecked toggle button 1`] = `
<View
  style={
    Object {
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 0,
        "width": 0,
      },
      "shadowOpacity": 0,
      "shadowRadius": 0,
    }
  }
>
  <View
    style={
      Object {
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 4,
          "borderWidth": 0,
          "elevation": 0,
          "height": 42,
          "margin": 0,
          "overflow": "hidden",
          "width": 42,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
            "selected": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            false,
            Object {
              "alignItems": "center",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          accessibilityElementsHidden={true}
          importantForAccessibility="no-hide-descendants"
          pointerEvents="none"
          selectable={false}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "color": "rgba(28, 27, 31, 0.38)",
                "fontSize": 24,
              },
            ]
          }
        >
          □
        </Text>
      </View>
    </View>
  </View>
</View>
`;
